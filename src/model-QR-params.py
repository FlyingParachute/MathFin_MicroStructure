import matplotlib.pyplot as plt
import numpy as np
from scipy.optimize import curve_fit

# 第一组数据
x = [0.0014198, 0.44634, 0.64166, 1.0128, 1.5206, 2.0090, 2.3410, 2.6926, 2.9965, 3.3177, 3.5228, 3.6693, 3.8646, 4.5320, 6.6550, 8.7218, 9.3338, 9.5291, 9.8221, 9.9198, 10.506, 10.994, 11.761, 12.693, 13.387, 13.826, 14.779, 15.953, 16.600, 17.082, 17.904, 19.133, 20.402, 22.128, 23.397, 24.849, 26.620, 28.671, 30.820, 32.969, 35.117, 37.266, 39.414, 41.563, 43.712, 45.860, 48.009, 50.158, 52.306, 54.455, 56.603, 58.654]
y = [15.113, 16.472, 17.344, 18.551, 19.953, 21.155, 22.603, 23.973, 25.477, 27.279, 28.634, 29.863, 30.906, 31.931, 32.612, 32.024, 30.571, 29.402, 28.575, 27.103, 25.835, 24.631, 23.451, 22.447, 21.801, 20.558, 19.323, 18.077, 16.767, 16.080, 14.899, 14.068, 12.772, 11.852, 10.559, 9.8281, 8.9273, 8.1839, 7.6059, 7.0035, 6.6895, 6.4081, 6.1917, 5.8452, 5.7182, 5.6155, 5.4763, 5.3289, 5.3116, 5.0383, 4.9844, 4.9011]

# 修改拟合模型函数，加入常数项 c
def model_func(x, a, b, c):
    return a * x * np.exp(-b * x) + c

# 对第一组数据进行拟合
params, _ = curve_fit(model_func, x, y)
a, b, c = params
print(f'第一组拟合结果: y = {a:.3f}*x*exp(-{b:.3f}*x) + {c:.3f}')

# 添加第三组数据（采用 a*exp(-b*x) + c 拟合）
x3 = [1.0574, 1.3215, 1.5766, 1.9505, 2.3343, 2.6673, 2.9894, 3.9555, 4.3840, 5.0300,
      5.5275, 6.0259, 6.9368, 7.9808, 9.2276, 9.5442, 10.021, 11.074, 12.384, 13.881,
      15.581, 17.587, 19.612, 21.724, 23.838, 25.951, 28.065, 30.180, 32.295, 34.410,
      36.524, 38.639, 40.755, 42.870, 44.985, 47.100, 49.216, 51.331, 53.446, 55.562,
      57.677, 59.215]
y3 = [4.5950, 4.3875, 4.2040, 3.9490, 3.7388, 3.5938, 3.3992, 3.1960, 3.0261, 2.7976,
      2.6122, 2.4589, 2.2498, 2.0205, 1.8931, 1.7350, 1.5759, 1.3784, 1.2032, 1.0349,
      0.88430, 0.71230, 0.58267, 0.48363, 0.39424, 0.32864, 0.28298, 0.25403, 0.22509, 0.20837,
      0.19101, 0.17750, 0.17171, 0.16721, 0.17043, 0.15885, 0.15628, 0.16593, 0.16271, 0.16850,
      0.17300, 0.16130]

# 定义新的模型函数用于第三组数据：a*exp(-b*x) + c
def model_func2(x, a, b, c):
    return a * np.exp(-b * x) + c

# 对第三组数据进行拟合
params3, _ = curve_fit(model_func2, x3, y3)
a3, b3, c3 = params3
print(f'第三组拟合结果: y = {a3:.3f}*exp(-{b3:.3f}*x) + {c3:.3f}')

# 第二组数据
x2 = [0.88386, 1.3244, 1.4399, 1.6323, 1.8825, 2.2097, 2.4503, 2.5946, 2.8833, 3.0180, 3.2201, 3.2682, 3.3645, 3.4415, 3.6211, 3.7975, 4.3268, 6.2514, 7.9983, 9.0902, 9.2345, 9.2827, 9.4751, 9.6676, 9.9082, 10.582, 10.870, 11.809, 12.933, 13.757, 14.610, 15.663, 16.356, 16.880, 18.126, 19.339, 20.494, 22.065, 23.380, 25.401, 27.342, 29.539, 31.656, 33.773, 35.890, 38.007, 40.125, 42.242, 44.359, 46.476, 48.593, 50.710, 52.827, 54.944, 57.061, 58.890]
y2 = [9.4518, 10.708, 11.561, 12.370, 13.465, 14.730, 15.602, 16.452, 17.483, 18.738, 19.800, 20.681, 22.186, 21.447, 23.052, 24.246, 25.311, 25.899, 26.428, 25.916, 26.985, 24.976, 23.925, 22.942, 21.772, 20.745, 20.169, 19.250, 18.366, 17.225, 16.267, 15.387, 14.431, 13.530, 12.449, 11.793, 10.984, 10.217, 9.1973, 8.5119, 7.6580, 7.1860, 6.7014, 6.2932, 6.1173, 5.9289, 5.7996, 5.5957, 5.6435, 5.5795, 5.6025, 5.6442, 5.7481, 5.6872, 5.7444, 5.7490]

# 对第二组数据进行拟合
params2, _ = curve_fit(model_func, x2, y2)
a2, b2, c2 = params2
print(f'第二组拟合结果: y = {a2:.3f}*x*exp(-{b2:.3f}*x) + {c2:.3f}')

# 创建包含三个子图的图形
fig, axs = plt.subplots(1, 3, figsize=(30, 6))

# 子图1：第一组数据
ax = axs[0]
ax.plot(x, y, 'r.-', linewidth=2, markersize=8)
x_fit = np.linspace(min(x), max(x), 1000)
y_fit = model_func(x_fit, a, b, c)
ax.plot(x_fit, y_fit, 'b-', label=f'Fit: y = {a:.3f}*x*exp(-{b:.3f}*x) + {c:.3f}')
ax.set_xlim(0, 60)
ax.set_ylim(2, 35)  # 修改下限为2，上限保持35
ax.grid(True, linestyle='--', alpha=0.7)
ax.set_xlabel('X')
ax.set_ylabel('Y')
ax.set_title('Data Plot 1')
ax.legend()

# 子图2：第二组数据
ax2 = axs[1]
ax2.plot(x2, y2, 'r.-', linewidth=2, markersize=8)
x2_fit = np.linspace(min(x2), max(x2), 1000)
y2_fit = model_func(x2_fit, a2, b2, c2)
ax2.plot(x2_fit, y2_fit, 'b-', label=f'Fit: y = {a2:.3f}*x*exp(-{b2:.3f}*x) + {c2:.3f}')
ax2.set_xlim(0, 60)
ax2.set_ylim(2, 28)  # 修改下限为2，上限改为28
ax2.grid(True, linestyle='--', alpha=0.7)
ax2.set_xlabel('X')
ax2.set_ylabel('Y')
ax2.set_title('Data Plot 2')
ax2.legend()

# 子图3：第三组数据（用 a*exp(-b*x) + c 拟合）
ax3 = axs[2]
ax3.plot(x3, y3, 'r.-', linewidth=2, markersize=8)
x3_fit = np.linspace(min(x3), max(x3), 1000)
y3_fit = model_func2(x3_fit, a3, b3, c3)
ax3.plot(x3_fit, y3_fit, 'b-', label=f'Fit: y = {a3:.3f}*exp(-{b3:.3f}*x) + {c3:.3f}')
ax3.set_xlim(0, 60)
ax3.set_ylim(0, 5)
ax3.grid(True, linestyle='--', alpha=0.7)
ax3.set_xlabel('X')
ax3.set_ylabel('Y')
ax3.set_title('Data Plot 3')
ax3.legend()

plt.show()